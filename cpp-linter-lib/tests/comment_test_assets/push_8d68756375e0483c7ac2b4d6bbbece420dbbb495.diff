diff --git a/.github/workflows/cpp-lint-action.yml b/.github/workflows/cpp-lint-action.yml
new file mode 100644
index 0000000..9b17f87
--- /dev/null
+++ b/.github/workflows/cpp-lint-action.yml
@@ -0,0 +1,52 @@
+name: cpp-linter as action
+
+on:
+  push:
+    paths-ignore: "docs/**"
+  pull_request:
+    paths-ignore: "docs/**"
+
+
+jobs:
+  cpp-linter:
+    runs-on: ubuntu-latest
+
+    strategy:
+      matrix:
+        clang-version: ['9','10', '11', '12', '13', '14']
+      fail-fast: false
+
+    steps:
+      - uses: actions/checkout@v2
+
+      - name: Cache the build artifacts
+        id: cache-build
+        uses: actions/cache@v3
+        with:
+          path: build
+          key: ${{ hashFiles('src/CMakeLists.txt', 'src/demo.cpp', 'src/demo.hpp') }}
+
+      - name: Generate compilation database
+        if: steps.cache-build.outputs.cache-hit != 'true'
+        run: mkdir build && cmake -Bbuild src
+
+      - name: run linter as action
+        uses: shenxianpeng/cpp-linter-action@master
+        id: linter
+        env:
+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
+        with:
+          style: file
+          files-changed-only: ${{ matrix.clang-version == '12' }}
+          # to ignore all build folder contents
+          ignore: build
+          database: build
+          verbosity: 9
+          version: ${{ matrix.clang-version }}
+          file-annotations: ${{ matrix.clang-version == '12' }}
+
+      - name: Fail fast?!
+        if: steps.linter.outputs.checks-failed > 0
+        run: echo "some linter checks failed"
+        # for actual deployment
+        # run: exit 1
diff --git a/.github/workflows/cpp-lint-package.yml b/.github/workflows/cpp-lint-package.yml
new file mode 100644
index 0000000..42ecb20
--- /dev/null
+++ b/.github/workflows/cpp-lint-package.yml
@@ -0,0 +1,54 @@
+name: cpp-linter as pkg
+
+on:
+  push:
+    paths-ignore: "docs/**"
+  pull_request:
+    paths-ignore: "docs/**"
+
+jobs:
+  cpp-linter:
+    runs-on: windows-latest
+
+    strategy:
+      matrix:
+        clang-version: ['9','10', '11', '12', '13', '14']
+        repo: ['shenxianpeng/cpp-linter-action']
+        branch: ['master']
+      fail-fast: false
+
+    steps:
+
+      - uses: actions/checkout@v3
+      - uses: actions/setup-python@v3
+      - name: Install clang-tools
+        uses: KyleMayes/install-llvm-action@v1
+        with:
+          version: ${{ matrix.clang-version }}
+          directory: ${{ runner.temp }}/llvm
+
+      - name: Install linter package
+        run: python3 -m pip install git+https://github.com/${{ matrix.repo }}/@${{ matrix.branch }}
+
+      - name: Cache the build artifacts
+        id: cache-build
+        uses: actions/cache@v3
+        with:
+          path: build
+          key: ${{ hashFiles('src/CMakeLists.txt', 'src/demo.cpp', 'src/demo.hpp') }}
+
+      - name: Generate  compiler database
+        if: steps.cache-build.outputs.cache-hit != 'true'
+        run: mkdir build && cmake -Bbuild src
+
+      - name: run linter as package
+        id: linter
+        env:
+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
+        run: cpp-linter -s=file -v=9 -i=build -p=build -V=${{ runner.temp }}/llvm --thread-comments=${{ matrix.clang-version == '12' }} -a=${{ matrix.clang-version == '12' }}
+
+      - name: Fail fast?!
+        if: steps.linter.outputs.checks-failed > 0
+        run: echo "Some files failed the linting checks!"
+        # for actual deployment
+        # run: exit 1
diff --git a/.github/workflows/cpp-lint.yml b/.github/workflows/cpp-lint.yml
deleted file mode 100644
index 5194143..0000000
--- a/.github/workflows/cpp-lint.yml
+++ /dev/null
@@ -1,29 +0,0 @@
-name: cpp-linter
-
-on:
-  push:
-    paths-ignore: "docs/**"
-  pull_request:
-    paths-ignore: "docs/**"
-
-jobs:
-  cpp-linter:
-    runs-on: ubuntu-latest
-    steps:
-      - uses: actions/checkout@v2
-      - uses: 2bndy5/cpp-linter-action@private-repo-support
-        id: linter
-        env:
-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
-        with:
-          style: file
-          files-changed-only: false
-          # to ignore all demo folder contents except for demo.cpp
-          # ignore: demo|!demo/demo.cpp
-
-      - name: Fail fast?!
-        if: steps.linter.outputs.checks-failed > 0
-        run: |
-          echo "Some files failed the linting checks!"
-        # for actual deployment
-        # run: exit 1
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..3dda933
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,6 @@
+build/
+build.ninja
+cmake_install.cmake
+CMakeCache.txt
+compile_commands.json
+CMakeFiles/
\ No newline at end of file
diff --git a/compile_commands.json b/compile_commands.json
deleted file mode 100644
index 88fdc2a..0000000
--- a/compile_commands.json
+++ /dev/null
@@ -1,12 +0,0 @@
-[
-    {
-      "directory": ".",
-      "command": "/usr/bin/g++ -Wall -Werror demo.cpp",
-      "file": "/demo.cpp"
-    },
-    {
-      "directory": ".",
-      "command": "/usr/bin/g++ -Wall -Werror demo.cpp",
-      "file": "/demo.hpp"
-    }
-]
\ No newline at end of file
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
new file mode 100644
index 0000000..97bf80c
--- /dev/null
+++ b/src/CMakeLists.txt
@@ -0,0 +1,12 @@
+cmake_minimum_required(VERSION 3.15)
+
+# Set the project name to your project name
+project(demo C CXX)
+
+set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
+
+add_executable(demo_app 
+    ${CMAKE_BINARY_SOURCE_DIR}demo.hpp
+    ${CMAKE_BINARY_SOURCE_DIR}demo.cpp
+)
+target_include_directories(demo_app PUBLIC ${CMAKE_BINARY_SOURCE_DIR})
\ No newline at end of file
diff --git a/demo.cpp b/src/demo.cpp
similarity index 76%
rename from demo.cpp
rename to src/demo.cpp
index b7d4a0d..8a4a9ed 100644
--- a/demo.cpp
+++ b/src/demo.cpp
@@ -1,15 +1,16 @@
 /** This is a very ugly test code (doomed to fail linting) */
 #include "demo.hpp"
 #include <cstdio>
+#include <cstddef>
+
+size_t dummyFunc(size_t i) { return i; }
 
 int main()
 {
     for (;;)
         break;
 
-
     printf("Hello world!\n");
 
     return 0;
 }
-
diff --git a/demo.hpp b/src/demo.hpp
similarity index 100%
rename from demo.hpp
rename to src/demo.hpp
